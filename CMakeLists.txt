cmake_minimum_required(VERSION 2.8)
FILE(WRITE ./include/config.h "#define MESH_VIEWER_PATH \"${PROJECT_SOURCE_DIR}\"")
add_compile_options(-Wall -g -lstdc++)
add_compile_options(-no-pie)
set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -std=c++11)
set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -std=c11)
find_package(TOOLS_NODE)
if(TOOLS_NODE_FOUND)
	message("${TOOLS_NODE_LIBRARY}")
endif(TOOLS_NODE_FOUND)
add_subdirectory(./src)
add_subdirectory(./src/Mesh_Viewer_World_Manager)
add_subdirectory(./src/tools_node)
add_subdirectory(./src/Math)
include_directories(${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/thirdpart/glad/include)
link_directories(${PROJECT_SOURCE_DIR}/lib ${PROJECT_SOURCE_DIR}/temp_libs)
if(CMAKE_SYSTEM_NAME MATCHES "Linux")
link_libraries(glfw3 GL m Xrandr Xi X11 Xxf86vm pthread dl Xinerama Xcursor mesh_viewer  mesh_viewer_world_manager tools_node mesh_viewer_matrix4x4)
elseif(CMAKE_SYSTEM_NAME MATCHES "Windows")
link_libraries(m glfw3 opengl32)
endif(CMAKE_SYSTEM_NAME MATCHES "Linux")
aux_source_directory(${PROJECT_SOURCE_DIR}/Demo mysrc)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
add_executable(main ${mysrc})
target_link_libraries(main )


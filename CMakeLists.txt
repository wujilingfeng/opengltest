cmake_minimum_required(VERSION 2.8)
FILE(WRITE ./include/config.h "#define MESH_VIEWER_PATH \"${PROJECT_SOURCE_DIR}\"")
add_compile_options(-Wall -g -lstdc++)
#set(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS} -no-pie)
#生成可执行程序
set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -std=c++11)
set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -std=c99)
add_subdirectory(./src)
if(CMAKE_SYSTEM_NAME MATCHES "Linux")
link_libraries(glfw3 GL Xrandr Xi X11 Xxf86vm pthread  Xinerama Xcursor m dl )
elseif(CMAKE_SYSTEM_NAME MATCHES "Windows")
link_libraries(m glfw3 opengl32)
endif(CMAKE_SYSTEM_NAME MATCHES "Linux")
include_directories(${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/thirdpart/glad/include ${PROJECT_SOURCE_DIR}/thirdpart/cstructures/include ${PROJECT_SOURCE_DIR}/thirdpart/freetype-2.10.0/include)
link_directories(${PROJECT_SOURCE_DIR}/lib ${PROJECT_SOURCE_DIR}/temp_libs )
aux_source_directory(${PROJECT_SOURCE_DIR}/Demo mysrc)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/temp_libs)
#link_libraries()
#add_subdirectory(/src)
add_executable(main ${mysrc})
target_link_libraries(main -Wl,--start-group viewer cstructures -Wl,--end-group)
#target_link_libraries(main -Wl,--start-group viewer_matrix4x4 viewer_openglalg   viewer_world_manager cstructures -Wl,--end-group)
